
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://kvyokiknafyoaqpwokje.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt2eW9raWtuYWZ5b2FxcHdva2plIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ0NjMxMjQsImV4cCI6MjA2MDAzOTEyNH0.1-Vx6AP250JuVzxD_CdY24peoaG6qHXQ7yPwAAV0oLo";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
      flowType: 'pkce',
      detectSessionInUrl: true,
      // Removed flowParams as it's not recognized by the TypeScript definitions
    }
  }
);

// Inicializa o bucket de avatares se necessário
(async () => {
  try {
    // Verificar se o bucket existe
    const { data, error } = await supabase.storage.getBucket('avatars');
    
    if (error && error.message.includes('The resource was not found')) {
      // Criar o bucket se não existir
      await supabase.storage.createBucket('avatars', {
        public: true,
        allowedMimeTypes: ['image/png', 'image/jpeg', 'image/gif', 'image/webp'],
        fileSizeLimit: 1024 * 1024 * 2, // 2MB
      });
      
      console.log('Bucket de avatares criado com sucesso');
    }
  } catch (error) {
    console.error('Erro ao verificar/criar bucket de avatares:', error);
  }
})();
